# Создание S3 бакета (Simple Storage Service) для хранения Terraform State
Не через Терраформ, иначе не сделает terraform init с backend.tf
И имя пакета должно быть уникально!!

#теперь создаем backend.tf 
#Настройка S3 как бекэнда для Terraform (говорим ему сохранять state в S3)
terraform {
  backend "s3" {
    bucket         = "my-terraform-state-bucket6565434334320987547"  # Имя бакета S3, который мы создали для хранения состояния.
    key            = "terraform/state"  # Путь к файлу состояния в бакете S3. Так захотелось                                             
    region         = "eu-central-1"  # Регион, где расположен мой S3 бакет и DynamoDB таблица- там у меня и VPC
    dynamodb_table = "terraform-lock"  # Имя таблицы DynamoDB, которую мы  создали для блокировок.
    encrypt        = true  # Включает шифрование файлов состояния в S3 для обеспечения безопасности данных.
  }
# Создание DynamoDB таблицы для блокировок состояния - тоже вручную потому что иначе не сделать terraform apply
 hash_key      = "LockID"  #Используется для определения когда блокировать: когда Terraform начинает работу, он пытается создать запись в таблице DynamoDB с ключом LockID. Если запись уже существует (то есть, другой процесс Terraform уже выполняет изменения-кто-то редачит тоже), новый процесс обнаруживает это и ждет, пока запись не будет удалена
  billing_mode  = "PAY_PER_REQUEST"  # Режим выставления счетов. Выбираем оплату по запросам, чтобы избежать необходимости предоплаты.
  attribute {
    name = "LockID"  # Имя атрибута для ключа определяющего блокировку.
    type = "S"  # Тип атрибута. Здесь это string 
  }
}

#как дебажить? 
#terraform state list
#смотрим , потом можно удалить из стейта при ошибках 
#через rm
#потом terraform refresh и тд
